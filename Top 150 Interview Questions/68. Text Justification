class Solution:
    def fullJustify(self, words: List[str], maxWidth: int) -> List[str]:
        res,line,length,i = [],[],0,0
        while i < len(words):
            if length + len(line) + len(words[i]) > maxWidth:
                extra_space = maxWidth - length
                spaces = extra_space // max(1,len(line)-1)
                remainder_space = extra_space % max(1,len(line)-1)
                for j in range(max(1,len(line)-1)):
                    line[j] += " "*spaces
                    if remainder_space:
                        line[j] += " "
                        remainder_space -= 1
                res.append("".join(line))
                line, length = [], 0
            line.append(words[i])
            length += len(words[i])
            i += 1
        last_line = " ".join(line)
        trail = maxWidth - len(last_line)
        last_line += " "*trail 
        res.append(last_line)    

        return res
